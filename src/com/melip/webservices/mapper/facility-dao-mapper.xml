<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 施設サービス用 -->
<mapper namespace="com.melip.webservices.mapper.Facility">

  <!-- 施設DTO用resultMap -->
  <resultMap id="facilityDtoResultMap" type="com.melip.common.dto.common.FacilityDto">
    <id property="facilityId" column="facilityId" />
    <result property="latitude" column="latitude" />
    <result property="longitude" column="longitude" />
    <collection property="attrDtoList" ofType="com.melip.common.dto.common.AttrDto">
      <id property="attrGrpId" column="attrGrpId" />
      <result property="attrGrpAlias" column="attrGrpAlias" />
      <result property="attrGrpType" column="attrGrpType" />
      <result property="attrGrpNm" column="attrGrpNm" />
      <result property="attrVal" column="attrVal" />
      <result property="attrCdVal" column="attrCdVal" />
    </collection>
  </resultMap>

  <!-- ステータスの条件 -->
  <sql id="stsCondition">
    in
    <foreach collection="stsArray" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </sql>

  <!-- 言語区分の条件 -->
  <sql id="langDivCondition">
    in
    <foreach collection="langDivArray" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </sql>
  
  <!-- 施設情報取得 -->
  <select id="selectFacility" resultMap="facilityDtoResultMap" parameterType="CONDITION"
    useCache="false">

    select
        a.FACILITY_ID          as facilityId
      , a.LATITUDE             as latitude
      , a.LONGITUDE            as longitude
      , a.FACILITY_ATTR_GRP_ID as attrGrpId
      , a.ALIAS                as attrGrpAlias
      , a.TYPE                 as attrGrpType
      , a.NM                   as attrGrpNm
      , case 
        when cd.CD_NM is null 
        then a.val 
        else cd.CD_NM 
        end                    as attrVal
      , case 
        when cd.cd_nm is null 
        then null 
        else a.VAL 
        end                    as attrCdVal 
    from
      ( 
        select
            f1.FACILITY_ID
          , f1.LATITUDE
          , f1.LONGITUDE
          , fag.FACILITY_ATTR_GRP_ID
          , fag.ALIAS
          , fag.TYPE
          , fag.CD_GRP_ID
          , fagl.NM
          , favl.VAL 
        from
          m_facility f1 
          inner join m_facility_attr_val fav 
            on f1.FACILITY_ID = fav.FACILITY_ID 
            and fav.STS <include refid="stsCondition"/>
          inner join m_facility_attr_val_lang favl 
            on fav.FACILITY_ATTR_VAL_ID = favl.FACILITY_ATTR_VAL_ID 
            and favl.STS <include refid="stsCondition"/>
            and favl.LANG_DIV <include refid="langDivCondition"/>
          inner join m_facility_attr_grp fag 
            on fav.FACILITY_ATTR_GRP_ID = fag.FACILITY_ATTR_GRP_ID 
            and fag.STS <include refid="stsCondition"/>
          inner join m_facility_attr_grp_lang fagl 
            on fag.FACILITY_ATTR_GRP_ID = fagl.FACILITY_ATTR_GRP_ID 
            and fagl.STS <include refid="stsCondition"/>
            and fagl.LANG_DIV <include refid="langDivCondition"/>
        where
          f1.STS <include refid="stsCondition"/>
          <if test="p.regionId != null"> 
            and f1.REGION_ID = #{p.regionId}
          </if> 
          <if test="v.facilityId != null"> 
            and f1.FACILITY_ID = #{v.facilityId}
          </if> 
          <if test="p.attrGrpSearchConditionDtoList != null">
            and exists ( 
              select
                  * 
              from
                m_facility f2 
                inner join m_facility_attr_val fav 
                  on f2.FACILITY_ID = fav.FACILITY_ID 
                  and fav.STS <include refid="stsCondition"/>
                inner join m_facility_attr_val_lang favl 
                  on fav.FACILITY_ATTR_VAL_ID = favl.FACILITY_ATTR_VAL_ID 
                  and favl.STS <include refid="stsCondition"/>
                  and favl.LANG_DIV <include refid="langDivCondition"/>
                inner join m_facility_attr_grp fag 
                  on fav.FACILITY_ATTR_GRP_ID = fag.FACILITY_ATTR_GRP_ID 
                  and fag.STS <include refid="stsCondition"/>
              where
                f1.FACILITY_ID = f2.FACILITY_ID 
                and ( 
                  <trim prefixOverrides="or ">
                    <foreach collection="p.attrGrpSearchConditionDtoList" item="item">
                      or (fag.ALIAS = #{item.attrGrpAlias} and favl.VAL = #{item.val})
                    </foreach>
                  </trim>
                ) 
              group by
                f2.FACILITY_ID
              <if test="p.numOfSearchCondition != null and p.numOfSearchCondition != 0"> 
                having
                  count(*) = #{p.numOfSearchCondition}
              </if>
            )
          </if>
          <if test="p.latitude != null and p.longitude != null and p.radius != null">
            and (
              6371 * ACOS(
                COS(RADIANS(#{p.latitude})) * COS(RADIANS(f1.LATITUDE)) * COS(RADIANS(f1.LONGITUDE) - RADIANS(#{p.longitude}))
                +
                SIN(RADIANS(#{p.latitude})) * SIN(RADIANS(f1.LATITUDE))
              )
            ) &lt;= #{p.radius}
          </if>
      ) a 
      left outer join v_cd cd 
        on a.CD_GRP_ID = cd.CD_GRP_ID 
        and a.VAL = cd.CD 
        and cd.LANG_DIV <include refid="langDivCondition"/>
    <where>
      <if test="p.targetAttrGrpAliasList != null">
        <foreach collection="p.targetAttrGrpAliasList" item="item" >
          or a.ALIAS = #{item}
        </foreach>
      </if>
    </where> 
    order by
      facilityId
      , attrGrpId

  </select>

</mapper>
